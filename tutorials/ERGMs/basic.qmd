---
title: Basic ERGM estimation
author: Simone Santoni
date: last-modified
abstract-title: Synopsis
abstract: This notebook shows how to fit a basic ERGM on a one-mode, directed network dataset
warning: false
format: 
  html:
    code-fold: true
    code-tools: true
    toc: true
    toc-title: Table of Contents 
    toc-depth: 2
    toc-location: right
    number-sections: true
    citations-hover: false
    footnotes-hover: false
    crossrefs-hover: false
    theme: journal
    fig-width: 9
    fig-height: 6
  ipynb: default
  #typst: default
  docx: default
  typst: default
  #pdf:
  #  documentclass: scrartcl
  #  papersize: letter
---

# Notebook setup

## Load libraries

We need to load three libraries:

+ [`car`](https://cran.r-project.org/web/packages/car/car.pdf), which stands for 'Companion to Applied Regression,' provides utility functions regarding regression models
+ [`sna`](https://cran.r-project.org/web/packages/sna/index.html), a [Statnet](https://statnet.org/)'s library, includes many network descriptives
+ [`ergm`](), another [Statnet](https://statnet.org/)'s library, implements ERGMs.

```{r}
library(car)
library(sna)
library(ergm)
```

## Load data

This tutorial will use a toy dataset regarding the friendship relationship in a small school (see Rawlings et al., 2023). The data, which are available in the GitHub repository https://github.com/JeffreyAlanSmith, comprise two files: `example_schoolmat,csv` regards the friendship relationship, while `example_schooldata.csv` concerns node-level attributes (i.e., the characteristics of students).

```{r}
# relational data
url1 <- "https://github.com/JeffreyAlanSmith/Integrated_Network_Science/raw/master/data/example_schoolmat.csv"
school_mat <- read.csv(file = url1, row.names = 1)
# node attributes
url2 <- "https://github.com/JeffreyAlanSmith/Integrated_Network_Science/raw/master/data/example_schooldata.csv"
school_attributes <- read.csv(file = url2)
```

# ERGM 101

**What is the objective of ERGMs?**

ERGMs test how and to what extent an observed network exhibits certain tie formation mechanisms. Example of tie formation mechanisms include (but they are not limited to):

  + In-degree centrality, the tendency of a node $i$ to receive ties
  + Out-degree centrality, the tendency of a node $i$ to send ties
  + Reciprocity, a *dyadic* tendency such that $i \rightarrow j$ & $j \rightarrow i$
  + Transitive closure, a *triadic* tendency such that i.e., $i \rightarrow j$ & 
    $j \rightarrow w$ & $i \rightarrow w$
  + Balance, the tendency for two nodes $i$ and $j$ to share alters 
    $a = {a_{1}, a_{2}, ..., a_{n}}$
  + Node attributes, i.e., node $i$'s qualities
  + Dyadic attributes, i.e., the similarity (or differences) in nodes $i$ and $j$ qualities

**What is the intuition behind ERGMs?**

ERGMs consider observed networks as mixtures of network effects

## The General Form of ERGM

ERGMs estimate the probabilities that the observed network $y$ comes from the class $Y$ based on a set of endogenous and exogenous tie formation explanations (aka 'model effects'). ERGM's general form is the following:

\begin{equation}\label{eq:ergm_gen_form}
Pr(Y = y|X) = \frac{exp[\theta^{T}g(y,X)]}{k(\theta)}
\end{equation}

where $\theta^{T}$ is the vector of regression coefficients regarding the model effects $g(y, X)$, and $k(\theta)$ is the summation of the numerator's value over the set of all possible networks $y$.

To better understand ERGM's general form, we can dispense the numerator of the previous equation as follows:
  
  \begin{equation}
  [\theta_{1}, \theta_{2}, ..., \theta_{n}]\begin{bmatrix}
           g_{1}(y) \\
           g_{2}(y) \\
           \vdots \\
           g_{n}(y)
        \end{bmatrix}
        = \sum_{i=1}^{n} \theta_{i} \cdot g_{i}(y)
  \end{equation}

This equation highlights that the probability of observing a particular network in a set of networks―e.g., ten-node networks exhibiting significant in-degree popularity and reciprocity―as a function of many $g(y)$. We can also dispense the equation in terms of the log odds of an edge:

\begin{equation}
logit(Y_{ij} = 1) = \theta^{T} \cdot \delta[g(y, X)]_{ij}
\end{equation}

where $\delta[(y, X)]$ is the 'change' statistic, that is, the change in $g(y,X)$ when the value of only the $ij$ dyad is changed from 0 to 1.

## Examples of Model Effects

:::: {#fig-model-effects layout-ncol=2}

![](imgs/model_effects_1.png){#fig-A}

![](imgs/model_effects_2.png){#fig-B}

Model Effects reported in [Rawlings et al. (2023, pp. 322-323)](https://www.cambridge.org/core/books/network-analysis/C9202FD5420BE99225FEED4B6214DBB7)
::::

## How Do I Compute the Change Statistic $\delta[g(y, X)]$?

ERGM libraries, like R's `ergm`, do that for you. However, it is important that you familiarize yourself with computing the change statistic $\delta[g(y, X)]$. Here are two key premises:

+ Mainly, the procedure aims to create the regressors for the above-displayed Logit model. For example, one may want to regress the likelihood to observe a tie from $i$ to $j$ against $i$ and/or $j$'s degree, the existence of the tie from $j$ to $i$, the fact that $i$ and $j$ are involved in a triad to which a third node $w$, and so on and so forth
+ Overall, the procedure consists of a 'thought experiment.' For each tie involving a pair of nodes $\{i, j\}$, we ask ourselves: 
  - "Does adding the tie from $i$ to $j$ make the relationship 'reciprocal', that is, $i \rightarrow j$ & $j \rightarrow i$?" 
  - "Does adding the tie from $i$ to $j$ m ,ake the triad involving $i$, $j$, and $w$ transitive?"
  - "Is the tie from $i$ to $j$ involving two similar (equivalent) or dissimilar (different) nodes"

The below-displayed figure illustrates this kind of thought experiment visually. The algorithm will replicate the thought experiment for us, iterating over all possible pairs of node $\{i, j\} creating the input for the Logit regression. The final dataset will have $N \cdot (N -1)$ rows (aka ties) and $K + 1$ columns, where $K$ is the number of selected model effects. The $+ 1$ signifies the column with the dependent variable information (aka, whether a tie is present or absent).

![Thought experiments regarding the impact of $i \rightarrow j$ on model effects. Source is [Rawlings et al. (2023, p. 320)](https://www.cambridge.org/core/books/network-analysis/C9202FD5420BE99225FEED4B6214DBB7)](imgs/thought_exp.png){#fig-thought-exp}. To browse the model effects available in `ergm`, we call `?ergmTerms` in R/radian shells. Another helpful command is `vignette("ergm-term-crossRef")`, which retrieves a tables that summarize the keywords for terms (with tables for commonly used terms, operator terms, and all terms), definitions for all terms, and a list of keywords with the terms they refer to.

# Arrange network data

**!! Warning ¡¡**: `ergm`, like the other libraries in `statnet`, does not integrate with `tidyverse`. Hence, we have to rely on R builtin objects when it comes manipulating the network data to pass to `ergm` as input. First, we create a matrix object containing friendship data.

```{r}
school_mat <- as.matrix(school_mat)
```

For the sake of redundancy, we recode the values in `school_attributes$gender`. Then, we wrap the node attributes up in a list.

```{r}
school_attributes$gender_recode <- recode(school_attributes$gender,
        as.factor = F,
        "0 = 'male'; 1 = 'female'"
)
attribute_list <- do.call(list, school_attributes)
```

Now, we can create a `statnet`'s network object as follows:

```{r}
school_net <- network(
        x = school_mat, directed = T,
        vertex.attr = attribute_list
)
```

# Network descriptives

Using the `sna` library, we can compute a set of network descriptives. For example, we can calculate the network's density, the average in-degree and out-degree, the reciprocity, and the transitivity. To start, we may want to retrieve the key features of `school_net`.

```{r}
school_net
```

## Network visualization

Then, we may want to familiarize ourselves with the network's structure by plotting it.

```{r}
plot(school_net)
```

By plotting the network, we can also explore how node attributes resolve in the network's structure. For example, we can color the nodes according to gender and grade.

```{r}
cols <- recode(school_attributes$gender,
        as.factor = F,
        "0 = 'blue'; 1 = 'pink'"
)
plot(school_net, vertex.col = cols)
```

Is there any preliminary evidence regarding gender-driven homophily in the network?

```{r}
plot(school_net, vertex.col = school_attributes$grade)
```

How about grade-driven homophily?

## Descriptive statistics

The `sna` library provides a set of functions to compute network descriptives. For example, we can calculate the network's density, the average in-degree and out-degree, the reciprocity, and the transitivity. Let us start by computing network density.

```{r}
gden(school_net)
```

Is 0.125 a high or low density value? How does it compare to the density of other networks? We can run a Conditional Uniform Graph Test (CGU) test to compare the density of `school_net` with the density of a random network. Here is how to do it:

+ We compare the observed statistic with the values ​​that one would see in a random network of the same size
  - As a researcher, you specify the baseline model of interest, specifying how to conswtruct the random network
  - This sets the comparison of interest, effectively holding certain desired features constant and allowing others to vary randomly
+ Then, we assess whether the observed statistic is above/below (or similar to) what one would expect by chance

```{r}
cug.test(
        dat = school_net, FUN = "gden", cmode = "size"
) 
```

Let us consider the reciprocity of the network. How can we compute it?

```{r}
grecip(school_net, measure = "dyadic.nonnull")
```

~40% of the ties are reciprocated in the friendship network. Is this a high or low value? How does it compare to the reciprocity of other networks? We can run a CGU test to compare the reciprocity of `school_net` with the reciprocity of a random network. Here is how to do it:

```{r}
cug.test(
        dat = school_net, FUN = "grecip",
        FUN.args = list(measure = "dyadic.nonnull"), cmode = "edges"
)
```

# ERGM estimation

What is the take home from the EDA?

+ We have so far learned a bit about our network
+ We know there is strong degree homophily and weaker gender homophily
+ We know that boys tend to give and receive more ties than girls
+ We also know that there are likely norms around reciprocating friendship

We now want to consider these micro-processes together, to see (in a systematic way) how important each factor is in predicting the existence of a tie, net of the other network processes. 

## Simple 'edge' model

We start with a model that considers only the count of edges in the network. This way, we are asking ourselves: "Is this friendship network a random network, i.e., a network in which a fixed number of ties are randomly distributed among the nodes?"

```{python}
mod_rand <- ergm(formula = 'school_net ~ edges') 
```

## Edges and homophily


## Edges, homophily, and node attributes


## Edges, homophily, node attributes, and reciprocity

