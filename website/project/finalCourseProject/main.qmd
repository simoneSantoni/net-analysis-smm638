---
title: "Final Course Project"
subtitle: "Individual Network Analysis Research"
---

## Project Overview

The final project is an individual, comprehensive network analysis that demonstrates mastery of concepts covered throughout the course. This capstone project allows you to pursue your own research interests while applying advanced network analytics techniques.

### Key Information

- **Format**: Individual project
- **Weight**: 40% of final grade
- **Duration**: 4 weeks
- **Due Date**: Week 11 (one week after course ends)
- **Deliverables**: Research paper + Code + Presentation

## Project Objectives

The final project should:

1. **Demonstrate** comprehensive understanding of network analytics
2. **Apply** advanced techniques beyond basic centrality measures
3. **Generate** original insights from network data
4. **Contribute** meaningful analysis to your field of interest
5. **Showcase** technical and analytical skills to potential employers

## Project Scope

### Option A: Original Research
Conduct original network analysis research on a topic of your choice:
- Formulate research questions
- Collect or identify appropriate data
- Apply advanced methods
- Generate novel insights

### Option B: Replication & Extension
Replicate and extend published network analysis:
- Choose a published paper
- Replicate key findings
- Extend with new data or methods
- Provide critical evaluation

### Option C: Business Case Study
Develop an in-depth business case using network analytics:
- Identify real business problem
- Collect relevant network data
- Provide actionable recommendations
- Include implementation plan

## Requirements

### Technical Requirements

Your project must demonstrate proficiency in:

1. **Data Management**
   - Data collection/acquisition
   - Cleaning and preprocessing
   - Handling large-scale networks (if applicable)

2. **Core Analysis** (all required)
   - Multiple centrality measures
   - Network structure analysis
   - Statistical testing/validation

3. **Advanced Techniques** (choose at least 2)
   - Community detection algorithms
   - Network dynamics/evolution
   - Multilayer/multiplex networks
   - Network regression models (QAP, ERGM)
   - Machine learning on networks
   - Link prediction
   - Diffusion/contagion models

4. **Visualization**
   - Static network visualizations
   - Interactive visualizations (bonus)
   - Clear, publication-quality figures

### Deliverables

#### 1. Research Paper (3,000-4,000 words)

**Structure:**

1. **Abstract** (200 words)
   - Problem statement
   - Methods used
   - Key findings
   - Implications

2. **Introduction** (500 words)
   - Background and motivation
   - Research questions/objectives
   - Contribution statement

3. **Literature Review** (700 words)
   - Theoretical framework
   - Related work
   - Research gap

4. **Methodology** (800 words)
   - Data description
   - Network construction
   - Analytical approaches
   - Validation methods

5. **Results** (1,000 words)
   - Descriptive statistics
   - Main findings
   - Robustness checks

6. **Discussion** (600 words)
   - Interpretation of results
   - Theoretical implications
   - Practical applications
   - Limitations

7. **Conclusion** (200 words)
   - Summary of findings
   - Future research

8. **References** (not included in word count)
   - Minimum 20 academic sources
   - Proper citation format

#### 2. Technical Appendix

- Complete, documented code
- Reproducibility instructions
- Additional figures/tables
- Sensitivity analyses

#### 3. GitHub Repository

Required elements:
```
project/
├── README.md          # Project overview and instructions
├── data/             
│   ├── raw/          # Original data files
│   └── processed/    # Cleaned data
├── code/
│   ├── 01_data_prep.R/py
│   ├── 02_analysis.R/py
│   └── 03_visualization.R/py
├── results/
│   ├── figures/
│   └── tables/
├── docs/
│   └── paper.pdf
└── requirements.txt   # Dependencies
```

#### 4. Presentation (10 minutes)

- 8 minutes presentation
- 2 minutes Q&A
- Focus on key insights
- Demonstrate technical competence

## Grading Criteria

| Component | Weight | Detailed Criteria |
|-----------|--------|-------------------|
| **Research Quality** | 30% | Originality, rigor, contribution |
| **Technical Proficiency** | 25% | Code quality, method selection, implementation |
| **Analysis & Insights** | 25% | Depth of analysis, validity of conclusions |
| **Communication** | 15% | Writing clarity, visualization quality |
| **Presentation** | 5% | Oral communication, slide design |

### Grading Rubric Details

**A (85-100%)**: Exceptional work suitable for conference presentation
- Novel insights or methodological contribution
- Flawless technical execution
- Publication-quality writing and visualizations

**B (70-84%)**: Strong work meeting all requirements
- Solid application of advanced techniques
- Clear business/research value
- Minor technical or presentation issues

**C (60-69%)**: Adequate work with room for improvement
- Basic requirements met
- Limited use of advanced techniques
- Some technical or analytical errors

**D (50-59%)**: Below expectations
- Missing key requirements
- Significant technical errors
- Poor communication

## Project Ideas by Industry

### Finance
- Interbank lending networks
- Stock correlation networks
- Cryptocurrency transaction networks
- Corporate ownership structures

### Marketing
- Brand association networks
- Customer journey networks
- Influencer marketing effectiveness
- Word-of-mouth propagation

### Technology
- Open source collaboration networks
- Patent citation networks
- API dependency networks
- Developer community analysis

### Healthcare
- Disease comorbidity networks
- Hospital referral networks
- Drug interaction networks
- Research collaboration networks

### Consulting/Strategy
- Industry ecosystem mapping
- Competitive dynamics networks
- Knowledge transfer networks
- M&A target identification

## Timeline

| Week | Milestone | Deliverable |
|------|-----------|-------------|
| **Week 7** | Topic selection | 1-page proposal |
| **Week 8** | Data collection | Data summary |
| **Week 9** | Initial analysis | Progress report |
| **Week 10** | Complete analysis | Draft sections |
| **Week 11** | Final submission | All materials |

## Resources & Support

### Datasets
- [Network Repository](http://networkrepository.com/)
- [Stanford Large Network Dataset Collection](https://snap.stanford.edu/data/)
- [KONECT](http://konect.cc/)
- Industry-specific databases (access via library)

### Tools & Libraries
- Advanced R packages: `RSiena`, `tergm`, `latentnet`
- Python libraries: `graph-tool`, `networkit`, `stellar-graph`
- Visualization: `Gephi`, `Cytoscape`, `D3.js`

### Writing Resources
- [Academic Phrasebank](https://www.phrasebank.manchester.ac.uk/)
- Library writing center consultations
- Previous high-scoring projects (on Moodle)

### Office Hours
- Extended office hours during project period
- Individual project consultations available
- Book via email with specific questions

## Frequently Asked Questions

**Q: Can I use my workplace data?**
A: Yes, with proper anonymization and company permission.

**Q: How much code should I include?**
A: Core analysis in appendix, full code in GitHub.

**Q: Can I collaborate with others?**
A: Discussion yes, but all work must be individual.

**Q: What if my analysis doesn't show significant results?**
A: Negative results are valid if properly analyzed and discussed.

## Submission Checklist

- [ ] Research paper (PDF)
- [ ] GitHub repository link
- [ ] Presentation slides
- [ ] Data availability statement
- [ ] Code runs without errors
- [ ] README with clear instructions
- [ ] All sources properly cited
- [ ] Submitted before deadline

---

::: {.callout-warning}
## Important Notes

1. **Start early** - Data issues always arise
2. **Backup everything** - Use version control
3. **Test reproducibility** - Have a peer try running your code
4. **Proofread carefully** - Consider professional editing
5. **Practice presentation** - Time yourself

Late submissions: 10% penalty per day
:::

::: {.callout-tip}
## Success Tips

The best projects often:
- Address real problems
- Use creative data sources
- Apply methods appropriately
- Tell compelling stories
- Include excellent visualizations
:::