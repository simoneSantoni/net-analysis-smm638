{
  "hash": "94bbf2728a57f78baaa1f6f699cf5dc5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Network AnalyticsÔºçSMM638\"\nsubtitle: \"A curated set of materials on network analytics for students\"\n---\n\n## Welcome to IND215\n\nThis interactive website provides a comprehensive four-part introduction to\nR programming specifically designed for students in analytics curricula.\nThe course emphasizes R's language fundamentals, the tidyverse ecosystem,\nand data manipulation for statistical computing and data science.\n\n## Why R for Analytics?\n\nR has been the **gold standard** for statistical computing and data analysis for good reasons:\n\n### üåü Statistical Foundation\n- Created by statisticians for statistical analysis\n- Standard tool in academia, research, and data science\n- Preferred language for statistical modeling and hypothesis testing\n\n### üí™ Rich Ecosystem\n- Comprehensive statistical libraries (stats, MASS)\n- Elegant data manipulation (tidyverse: dplyr, tidyr, ggplot2)\n- Advanced visualization capabilities (ggplot2, plotly, shiny)\n- Machine learning and predictive modeling (caret, randomForest)\n\n### üéØ Data-First Design\n- Built-in support for statistical data types (factors, time series)\n- Vectorized operations for efficient data processing\n- Seamless integration with databases and file formats\n- Interactive data exploration and analysis\n- Publication-ready graphics and reports\n\n## The R Learning Journey: A Humorous Reality Check\n\nLearning R is an adventure filled with \"aha!\" moments, head-scratching\nconfusion, and the occasional existential crisis about why your data frame\nsuddenly became a factor (again). Every R programmer has traveled this path,\nfrom their first `2 + 2` to their thousandth Google search about why their\nggplot won't cooperate.\n\nBelow is a humorous, fictitious R function that captures the universal\nexperiences every R learner encounters. As you progress through this\ncourse, you'll gradually understand why each of these moments is both\nfrustrating and funny. Consider it a preview of coming attractions ‚Äì if you\ndon't find it amusing now, bookmark it and return after a few weeks of R.\nYou'll be laughing (or crying) in recognition!\n\n### The Universal R Learning Timeline\n\nThis function documents real phenomena you'll encounter:\n- **Days 1-10**: The honeymoon phase where everything seems logical until you\n  meet factors\n- **Days 10-100**: The valley of despair where you discover R's \"quirks\"\n- **Days 100-365**: The plateau of productivity where you can actually wrangle\n  data (while still Googling constantly)\n- **Days 365+**: The eternal journey where you realize the tidyverse keeps evolving\n\n\n::: {.cell}\n\n```{.r .cell-code}\nr_newbie_experience <- function(day) {\n  # Simulates the emotional journey of learning R.\n  # Warning: Results may vary. Side effects include: false confidence,\n  # existential dread about factors, sudden urges to pipe everything,\n  # and an unhealthy relationship with Stack Overflow.\n  #\n  # Note: This function is 100% accurate based on extensive field research\n  # (aka crying over RStudio worldwide).\n\n  experiences <- list(\n    `1` = \"2 + 2  # I AM A DATA SCIENTIST NOW!!!\",\n    `2` = \"x <- 'R is easy'  # This arrow thing is cool!\",\n    `3` = \"c(1, 2, 3)  # Everything is a vector? Even single numbers?!\",\n    `4` = \"data.frame(x = 1:3, y = 4:6)  # Look at me making data!\",\n    `5` = \"my_data$new_column <- 'value'  # Dollar signs everywhere!\",\n    `6` = \"factor(c('A', 'B', 'A'))  # Why are my letters ordered weird?\",\n    `7` = \"mean(c(1, 2, NA))  # Returns NA. R is broken.\",\n    `8` = \"mean(c(1, 2, NA), na.rm = TRUE)  # Oh... that's embarrassing\",\n    `9` = \"library(tidyverse)  # Installed 47 packages. Is this normal?\",\n    `10` = \"data %>% filter()  # What is this pipe thing?\",\n    `12` = \"ggplot(data, aes(x, y)) + geom_point()  # I made a chart!\",\n    `14` = \"install.packages('everything')  # Package not found. Dreams crushed.\",\n    `15` = \"subset(data, condition)  # Why does everyone say this is bad?\",\n    `18` = \"data %>% select(everything())  # Pipe addiction begins\",\n    `20` = \"for(i in 1:10) print(i)  # Loops work but everyone judges me\",\n    `25` = \"apply(matrix, 1, function(x) sum(x))  # Functions have functions?\",\n    `30` = \"str(object)  # Everything has structure. Mind = blown\",\n    `35` = \"read.csv('file.csv')  # Why are my numbers now factors?!\",\n    `40` = \"stringsAsFactors = FALSE  # The magic incantation\",\n    `45` = \"data$column[data$other_column == 'value']  # Bracket hell\",\n    `50` = \"library(dplyr); data %>% filter(column == 'value')  # Enlightenment\",\n    `55` = \"Error: object 'column' not found  # But I can see it right there!\",\n    `60` = \"data %>% mutate(new = old * 2)  # Mutate sounds violent\",\n    `65` = \"group_by(category) %>% summarise(mean = mean(value))  # I'm a wizard!\",\n    `70` = \"left_join(df1, df2, by = 'id')  # Joins without SQL?\",\n    `75` = \"pivot_longer(data, cols = everything())  # Reshape magic\",\n    `80` = \"ggplot() + theme_minimal() + labs() + scale_x_continuous()  # Layered grammar\",\n    `85` = \"ggsave('plot.png', width = 8, height = 6, dpi = 300)  # Publication ready!\",\n    `90` = \"map(list, ~function(.x))  # Functional programming in R?\",\n    `95` = \"case_when(condition1 ~ result1, TRUE ~ default)  # Vectorized if-else\",\n    `100` = \"data[data$x > 5 & data$y < 10, ]  # Back to base R. Feeling dirty.\",\n    `110` = \"glue('Hello {name}!')  # String interpolation discovered\",\n    `120` = \"# Started answering R questions (incorrectly) on Stack Overflow\",\n    `130` = \"options(stringsAsFactors = FALSE)  # Set global defaults\",\n    `140` = \"library(here); here('data', 'file.csv')  # Path management zen\",\n    `150` = \"renv::init()  # Environment management. Finally!\",\n    `180` = \"Discovered R Markdown. Rewrote everything. Literate programming!\",\n    `200` = \"shiny::fluidPage()  # Interactive web apps in R?!\",\n    `250` = \"data.table vs dplyr debates. Chose sides. Lost friends.\",\n    `300` = \"Rcpp::cppFunction()  # C++ in R. Peak performance.\",\n    `365` = \"# Still googling 'how to exit vim' but my R analysis is solid\",\n    `400` = \"targets::tar_make()  # Pipeline management. Professional level.\",\n    `500` = \"Writing R packages. DESCRIPTION file mysteries solved.\",\n    `600` = \"CRAN submission. Peer review trauma begins.\",\n    `700` = \"Dreams in dplyr. Nightmares about factors.\",\n    `800` = \"Discovered {{}}.  Tidy evaluation everywhere.\",\n    `900` = \"10 years later: Still finding new CRAN packages daily\",\n    `1000` = \"Achieved enlightenment: Everything is a list (even data frames)\"\n  )\n\n  # Special milestone messages\n  if (day < 0) {\n    return(\"Error: Time travel not yet implemented in R 4.x (check CRAN)\")\n  } else if (day == 0) {\n    return(\"Day 0: Googling 'R vs Excel' (preparing for enlightenment)\")\n  } else if (day == 42) {\n    return(\"Day 42: The answer to life, universe, and missing values\")\n  } else if (day == 404) {\n    return(\"Day 404: Object not found. Try ls() again later.\")\n  } else if (day == 418) {\n    return(\"Day 418: I'm a teapot. Also, discovered Easter eggs in R\")\n  } else if (day == 314) {\n    return(paste0(\"Day \", day, \": pi  # Built-in constant. Math rocks!\"))\n  } else if (as.character(day) %in% names(experiences)) {\n    return(experiences[[as.character(day)]])\n  } else if (day > 1000) {\n    return(paste0(\"Day \", day, \": Realized the real R was the data we wrangled along the way\"))\n  } else if (day > 365) {\n    return(paste0(\"Day \", day, \": Still discovering that everything is a vector (even confusion)\"))\n  } else {\n    states <- c(\n      \"Alternating between 'I'm a data wizard' and 'I know nothing'\",\n      \"Debugging code that worked yesterday without changes\",\n      \"Adding print() statements everywhere like breadcrumbs\",\n      \"Copy-pasting from Stack Overflow with pride\",\n      \"Explaining to rubber duck why dplyr should work\",\n      \"Discovering the bug was a missing comma. Again.\",\n      \"Refactoring working code because 'tidyverse is cleaner'\",\n      \"Breaking production on a Friday at 4:59 PM\"\n    )\n    return(paste0(\"Day \", day, \": \", sample(states, 1)))\n  }\n}\n\n# Test the journey with milestone days\ncat(\"=== The R Newbie Journey: Extended Director's Cut ===\\n\\n\")\ntest_days <- c(0, 1, 4, 9, 30, 42, 60, 100, 365, 404, 418, 500, 1000)\nfor (day in test_days) {\n  cat(sprintf(\"Day %4d: %s\\n\", day, r_newbie_experience(day)))\n}\n```\n:::\n\n## Ready to Begin?\n\nStart your R journey by:\n\n1. üìö Reading the [Course Syllabus](course/syllabus.qmd)\n2. üìÖ Reviewing the [Course Schedule](course/schedule.qmd)\n3. üíª Setting up R and RStudio with our [Getting Started Guide](modules/module-1/installing-r.qmd)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}