{
  "hash": "59677665aac342eaeb79360fe2c696e0",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Network Analysis Glossary\"\nsubtitle: \"Essential Terms and Concepts\"\n---\n\n## Core Network Components\n\n### Graph\nA **graph** is a mathematical structure consisting of a set of objects (vertices) and a set of connections (edges) between pairs of these objects. In network analysis, graphs provide the fundamental framework for representing relationships and interactions between entities. Graphs can be directed (edges have direction) or undirected (edges have no inherent direction).\n\n$$\nG = {v, e}\n$$\n\nwhere \n\n$$v = [v_1, v_2, ..., v_i, ... v_n]$$\n\nand \n\n$$e = [(v_1, v_2), (v_1, v_i), ..., (v_i, v_j), ..., (v_j, v_n)]$$\n\n\n### Vertices (Nodes)\n**Vertices** (also called nodes) are the fundamental units or entities in a network. They represent the objects being studied, such as:\n\n- People in social networks\n- Computers in technological networks\n- Proteins in biological networks\n- Cities in transportation networks\n\nEach vertex can have attributes (e.g., age, location, type) that provide additional information about the entity it represents.\n\n### Edges (Links/Ties)\n**Edges** (also called links or ties) represent the connections or relationships between vertices. They encode the interactions, associations, or dependencies between entities in the network. Edges can have various properties:\n\n- Direction (directed vs. undirected)\n- Weight (strength of connection)\n- Type (multiple relationship types)\n- Temporal information (when the connection exists)\n\n### Network Relationship\nA **network relationship** defines the nature of connections between entities in a network. These relationships determine:\n\n- What constitutes a connection (e.g., friendship, communication, transaction)\n- How connections are measured or identified\n- Whether relationships are symmetric or asymmetric\n- The meaning and interpretation of network patterns\n\n## Network Types\n\n### One-mode vs Two-mode Networks\n\n#### One-mode Networks\n**One-mode networks** (also called unipartite networks) contain only one type of vertex. All connections occur between vertices of the same type. Examples include:\n\n- Friendship networks (people connected to people)\n- Citation networks (papers citing papers)\n- Trade networks (countries trading with countries)\n\nHere's an example of creating a one-mode network visualization concerning a collaboration network among five co-workers:\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Example of a one-mode collaboration network showing connections between individuals](network_terms_files/figure-html/one-mode-network-viz-1.png){width=672}\n:::\n:::\n\n\n#### Directed Vs Undirected Networks\n\n**Directed networks** (also called digraphs) have edges with a specific direction, indicating asymmetric relationships where the connection flows from one vertex to another. Examples include:\n\n- Email networks (sender → receiver)\n- Citation networks (citing paper → cited paper)  \n- Food webs (predator → prey)\n- Twitter follower networks (follower → followed)\n\nHere's an example of a directed network:\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Directed Email Communication Network](network_terms_files/figure-html/directed-network-viz-1.png){width=672}\n:::\n:::\n\n\n**Undirected networks** have edges without direction, representing symmetric relationships where connections are mutual. Examples include:\n\n- Friendship networks (mutual friendships)\n- Co-authorship networks (collaborations)\n- Infrastructure networks (roads, power grids)\n- Protein interaction networks\n\nThe choice between directed and undirected representation depends on whether the relationship being modeled is inherently asymmetric or symmetric.\n\n\n\n#### Two-mode Networks\n**Two-mode networks** (also called bipartite networks) contain two distinct types of vertices, and edges only connect vertices of different types. Examples include:\n\n- Actor-movie networks (actors connected to movies they appear in)\n- Author-paper networks (authors connected to papers they wrote)\n- Customer-product networks (customers connected to products they purchased)\n\nHere's an example of a two-mode purchasing network:\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Two-Mode Customer-Product Purchasing Network](network_terms_files/figure-html/two-mode-network-viz-1.png){width=672}\n:::\n:::\n\n\n\n\n### Signed Networks\n**Signed networks** are networks where edges carry positive or negative values, representing different types of relationships:\n\n- Positive edges: friendship, alliance, cooperation\n- Negative edges: animosity, conflict, competition\n\nSigned networks are particularly useful for studying:\n\n- Social balance theory\n- Coalition formation\n- Conflict dynamics\n- Opinion polarization\n\nHere's an example of a signed social network like cooperative Vs. competitive ties among co-workers:\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Signed Social Network with Positive and Negative Relationships](network_terms_files/figure-html/signed-network-viz-1.png){width=672}\n:::\n:::\n\n\n### Weighted vs Unweighted Networks\n\n#### Weighted Networks\n**Weighted networks** have edges with numerical values (weights) representing the strength, frequency, or capacity of connections. Examples include:\n\n- Communication networks (number of messages exchanged)\n- Transportation networks (traffic volume or distance)\n- Neural networks (synaptic strength)\n- Financial networks (transaction amounts)\n\nHere's an example of a weighted communication network:\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Weighted Communication Network (Edge Width = Message Volume)](network_terms_files/figure-html/weighted-network-viz-1.png){width=672}\n:::\n:::\n\n\n\n\n#### Unweighted Networks\n**Unweighted networks** (also called binary networks) have edges that simply indicate the presence or absence of a connection. All edges are treated equally, focusing on the topology rather than connection strength. These are simpler to analyze but may lose important information about relationship intensity.\n\n## Network Substructures\n\n### Dyads\nA **dyad** is the simplest possible network substructure, consisting of a pair of vertices and the possible edge(s) between them. In directed networks, dyads can be classified as:\n\n- Null dyad: no connection in either direction\n- Asymmetric dyad: connection in one direction only\n- Mutual/Reciprocal dyad: connections in both directions\n\nDyadic analysis examines pairwise relationships and forms the foundation for understanding reciprocity and basic network patterns.\n\nHere's a visualization showing a dyad within a larger network:\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Network with Emphasized Dyad (Alice-Bob)](network_terms_files/figure-html/dyad-network-viz-1.png){width=672}\n:::\n:::\n\n\n### Triads\nA **triad** consists of three vertices and the possible edges among them. Triads are fundamental for understanding:\n\n- Transitivity (\"friend of a friend\" patterns)\n- Structural balance\n- Clustering tendencies\n- Local network motifs\n\nHere's a visualization showing a triad within a larger network:\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Network with Emphasized Triad (Alice-Bob-Charlie)](network_terms_files/figure-html/triad-network-viz-1.png){width=672}\n:::\n:::\n\n\nWe will deal with these in weeks 4 and 5.\n",
    "supporting": [
      "network_terms_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}