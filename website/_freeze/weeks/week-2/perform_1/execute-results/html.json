{
  "hash": "a93a97c87ea203b64d7fa74e8ad6186a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Problem Set 1: Degree Centrality and Degree Distribution\"\nsubtitle: \"Week 2 - Network Analytics\"\ndate: \"today\"\nformat: html\n---\n\n## Overview\n\nIn this problem set, you will work with real-world network data from Wikipedia to compute degree centrality measures and analyze degree distributions. This exercise will help you understand:\n\n- How to load and process directed network data\n- The difference between in-degree and out-degree centrality\n- How to compute and visualize degree distributions\n- What degree distributions reveal about network structure\n\n## Dataset: Wikipedia Vote Network\n\n**Description**: This network represents voting relationships among Wikipedia users during administrator elections from the site's inception through January 2008.\n\n**Network Properties**:\n\n- **Nodes**: 7,115 Wikipedia users\n- **Edges**: 103,689 directed edges\n- **Edge meaning**: A directed edge from user i to user j means that user i voted on user j\n- **Network type**: Directed, unweighted\n\n**Source**: [Stanford SNAP - Wikipedia Vote Network](https://snap.stanford.edu/data/wiki-Vote.html)\n\n## Task 1: Download and Load the Data\n\nFirst, download the dataset and load it into R.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nlibrary(igraph)\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Download the dataset\nurl <- \"https://snap.stanford.edu/data/wiki-Vote.txt.gz\"\ndownload.file(url, destfile = \"wiki-Vote.txt.gz\")\n\n# Read the edge list (skip comment lines that start with #)\nedge_data <- read.table(\"wiki-Vote.txt.gz\",\n                        comment.char = \"#\",\n                        col.names = c(\"from\", \"to\"))\n\n# Create a directed graph\ng <- graph_from_data_frame(edge_data, directed = TRUE)\n\n# Basic network statistics\ncat(\"Number of nodes:\", vcount(g), \"\\n\")\ncat(\"Number of edges:\", ecount(g), \"\\n\")\ncat(\"Is directed:\", is_directed(g), \"\\n\")\n```\n:::\n\n\n::: {.callout-tip}\n## Understanding the Data Format\n\nThe wiki-Vote.txt file contains lines starting with `#` (comments) followed by an edge list where each line represents a directed edge: `FromNodeId ToNodeId`\n:::\n\n---\n\n## Task 2: Compute In-Degree and Out-Degree\n\nCalculate the in-degree and out-degree for all nodes in the network.\n\n**Questions**:\n\n1. What is the maximum in-degree? What does this represent in the context of Wikipedia voting?\n2. What is the maximum out-degree? What does this represent?\n3. How many nodes have in-degree of 0? What does this mean?\n4. How many nodes have out-degree of 0? What does this mean?\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\n# Compute in-degree and out-degree\nin_deg <- degree(g, mode = \"in\")\nout_deg <- degree(g, mode = \"out\")\n\n# Summary statistics\ncat(\"In-Degree Statistics:\\n\")\ncat(\"  Max:\", max(in_deg), \"\\n\")\ncat(\"  Mean:\", round(mean(in_deg), 2), \"\\n\")\ncat(\"  Median:\", median(in_deg), \"\\n\")\ncat(\"  Nodes with in-degree = 0:\", sum(in_deg == 0), \"\\n\\n\")\n\ncat(\"Out-Degree Statistics:\\n\")\ncat(\"  Max:\", max(out_deg), \"\\n\")\ncat(\"  Mean:\", round(mean(out_deg), 2), \"\\n\")\ncat(\"  Median:\", median(out_deg), \"\\n\")\ncat(\"  Nodes with out-degree = 0:\", sum(out_deg == 0), \"\\n\")\n\n# Find the most \"voted-on\" user\nmost_voted_user <- which.max(in_deg)\ncat(\"\\nMost voted-on user: Node\", most_voted_user,\n    \"with in-degree =\", in_deg[most_voted_user], \"\\n\")\n\n# Find the most active voter\nmost_active_voter <- which.max(out_deg)\ncat(\"Most active voter: Node\", most_active_voter,\n    \"with out-degree =\", out_deg[most_active_voter], \"\\n\")\n```\n:::\n\n\n::: {.callout-tip}\n## Interpreting Degree Centrality in Directed Networks\n\n- **In-degree**: Number of votes received (popularity, endorsement)\n- **Out-degree**: Number of votes cast (activity, participation)\n:::\n\n---\n\n## Task 3: Analyze the Top 10 Users\n\nIdentify and compare the top 10 users by in-degree and out-degree.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\n# Create a data frame with degree measures\ndegree_df <- data.frame(\n  node = V(g)$name,\n  in_degree = in_deg,\n  out_degree = out_deg,\n  total_degree = in_deg + out_deg\n)\n\n# Top 10 by in-degree (most voted-on)\ntop_in <- degree_df %>%\n  arrange(desc(in_degree)) %>%\n  head(10)\n\ncat(\"Top 10 Users by In-Degree (Most Votes Received):\\n\")\nprint(top_in)\n\n# Top 10 by out-degree (most active voters)\ntop_out <- degree_df %>%\n  arrange(desc(out_degree)) %>%\n  head(10)\n\ncat(\"\\nTop 10 Users by Out-Degree (Most Votes Cast):\\n\")\nprint(top_out)\n\n# Are the top users in both categories the same?\ncat(\"\\nOverlap between top in-degree and top out-degree users:\",\n    length(intersect(top_in$node, top_out$node)), \"out of 10\\n\")\n```\n:::\n\n\n**Question**: Do highly endorsed users (high in-degree) also tend to be active voters (high out-degree)? What does this tell you about participation patterns?\n\n---\n\n## Task 4: Compute Degree Distribution\n\nCalculate the degree distribution for both in-degree and out-degree.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\n# Compute degree distributions\nin_degree_dist <- table(in_deg)\nout_degree_dist <- table(out_deg)\n\n# Convert to data frames for plotting\nin_deg_df <- data.frame(\n  degree = as.numeric(names(in_degree_dist)),\n  frequency = as.numeric(in_degree_dist),\n  type = \"In-Degree\"\n)\n\nout_deg_df <- data.frame(\n  degree = as.numeric(names(out_degree_dist)),\n  frequency = as.numeric(out_degree_dist),\n  type = \"Out-Degree\"\n)\n\n# Combine for comparison\ncombined_deg_df <- rbind(in_deg_df, out_deg_df)\n\n# View the first few rows\nhead(in_deg_df, 10)\nhead(out_deg_df, 10)\n```\n:::\n\n\n---\n\n## Task 5: Plot Degree Distribution\n\nCreate visualizations of the degree distributions using both linear and log-log scales.\n\n### Linear Scale Plot\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nlibrary(ggplot2)\n\n# Plot on linear scale\nggplot(combined_deg_df, aes(x = degree, y = frequency, color = type)) +\n  geom_point(alpha = 0.6, size = 2) +\n  geom_line(alpha = 0.4) +\n  scale_color_manual(values = c(\"In-Degree\" = \"#c41c85\", \"Out-Degree\" = \"#50C878\")) +\n  labs(\n    title = \"Degree Distribution - Wikipedia Vote Network\",\n    subtitle = \"Linear scale\",\n    x = \"Degree (k)\",\n    y = \"Frequency (Number of Nodes)\",\n    color = \"Degree Type\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 14),\n    legend.position = \"bottom\"\n  )\n```\n:::\n\n\n### Log-Log Scale Plot\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\n# Plot on log-log scale\nggplot(combined_deg_df, aes(x = degree, y = frequency, color = type)) +\n  geom_point(alpha = 0.6, size = 2) +\n  geom_line(alpha = 0.4) +\n  scale_x_log10() +\n  scale_y_log10() +\n  scale_color_manual(values = c(\"In-Degree\" = \"#c41c85\", \"Out-Degree\" = \"#50C878\")) +\n  labs(\n    title = \"Degree Distribution - Wikipedia Vote Network\",\n    subtitle = \"Log-log scale\",\n    x = \"Degree (k) [log scale]\",\n    y = \"Frequency [log scale]\",\n    color = \"Degree Type\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 14),\n    legend.position = \"bottom\"\n  )\n```\n:::\n\n\n**Questions**:\n\n1. What shape does the degree distribution follow on the log-log scale?\n2. Does the distribution appear to follow a power law? If so, what does this indicate?\n3. How do the in-degree and out-degree distributions compare?\n4. What does the degree distribution tell you about the structure of Wikipedia's voting network?\n\n::: {.callout-tip}\n## Interpreting Degree Distributions\n\n- **Linear appearance on log-log plot**: Suggests a power-law (scale-free) distribution\n- **Power-law networks**: Few nodes with very high degree (hubs), many nodes with low degree\n- **Implications**: Highly skewed participation; a small number of elite users receive most votes\n:::\n\n---\n\n## Task 6: Compute Complementary Cumulative Distribution Function (CCDF)\n\nThe CCDF is often more robust than the degree distribution for identifying power laws.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\n# Function to compute CCDF\ncompute_ccdf <- function(degrees) {\n  deg_table <- table(degrees)\n  deg_values <- as.numeric(names(deg_table))\n  deg_counts <- as.numeric(deg_table)\n\n  # Compute CCDF: P(X >= k)\n  ccdf <- sapply(deg_values, function(k) {\n    sum(deg_counts[deg_values >= k]) / sum(deg_counts)\n  })\n\n  data.frame(degree = deg_values, ccdf = ccdf)\n}\n\n# Compute CCDF for in-degree and out-degree\nin_ccdf <- compute_ccdf(in_deg)\nin_ccdf$type <- \"In-Degree\"\n\nout_ccdf <- compute_ccdf(out_deg)\nout_ccdf$type <- \"Out-Degree\"\n\nccdf_combined <- rbind(in_ccdf, out_ccdf)\n\n# Plot CCDF on log-log scale\nggplot(ccdf_combined, aes(x = degree, y = ccdf, color = type)) +\n  geom_point(alpha = 0.6, size = 2) +\n  geom_line(alpha = 0.4) +\n  scale_x_log10() +\n  scale_y_log10() +\n  scale_color_manual(values = c(\"In-Degree\" = \"#c41c85\", \"Out-Degree\" = \"#50C878\")) +\n  labs(\n    title = \"Complementary Cumulative Distribution Function (CCDF)\",\n    subtitle = \"Wikipedia Vote Network - Log-log scale\",\n    x = \"Degree (k) [log scale]\",\n    y = \"P(X e k) [log scale]\",\n    color = \"Degree Type\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 14),\n    legend.position = \"bottom\"\n  )\n```\n:::\n\n\n---\n\n## Reflection Questions\n\nAfter completing all tasks, answer the following:\n\n1. **Inequality in participation**: What fraction of users received more than 100 votes? What fraction cast more than 100 votes?\n\n2. **Network interpretation**: Based on the degree distributions, how would you characterize the Wikipedia voting system? Is it egalitarian or hierarchical?\n\n3. **Power-law hypothesis**: Do the log-log plots suggest a power-law distribution? What would be the next steps to formally test this hypothesis?\n\n4. **Directed vs undirected**: How would your analysis differ if this were an undirected network?\n\n5. **Practical implications**: What does the degree distribution suggest about which users have influence in the Wikipedia administrator election process?\n\n---\n\n## Solutions and Hints\n\n::: {.callout-note collapse=\"true\"}\n## Click to reveal hints and expected results\n\n### Expected Statistics:\n\nBased on the SNAP documentation:\n\n- **Nodes**: 7,115\n- **Edges**: 103,689\n- **Average in-degree** H 14.57 (total edges / nodes)\n- **Average out-degree** H 14.57 (same for directed networks)\n\n### Degree Distribution Characteristics:\n\nBoth in-degree and out-degree distributions should show:\n\n- **Heavy-tailed distribution**: Most nodes have low degree, few have very high degree\n- **Approximate power-law**: Linear relationship on log-log plot\n- **High inequality**: Small fraction of users account for large fraction of votes\n\n### Interpretation:\n\n**High in-degree nodes**: Highly endorsed candidates, likely successful administrators or trusted community members\n\n**High out-degree nodes**: Very active voters, engaged community participants\n\n**Low degree nodes**: Casual users, single-election participants, or new users\n\n### Code Snippet for Computing Inequality:\n\n```r\n# What fraction of users received > 100 votes?\nhigh_in <- sum(in_deg > 100) / length(in_deg)\ncat(\"Fraction with in-degree > 100:\", round(high_in, 4), \"\\n\")\n\n# What fraction cast > 100 votes?\nhigh_out <- sum(out_deg > 100) / length(out_deg)\ncat(\"Fraction with out-degree > 100:\", round(high_out, 4), \"\\n\")\n```\n\n### Power-Law Testing:\n\nTo formally test for power-law distribution, you could use the `poweRlaw` package:\n\n```r\nlibrary(poweRlaw)\n\n# Fit power-law to in-degree\nin_pl <- displ$new(in_deg)\nest <- estimate_xmin(in_pl)\nin_pl$setXmin(est)\n\n# View results\ncat(\"Power-law exponent (alpha):\", in_pl$pars, \"\\n\")\ncat(\"xmin:\", in_pl$xmin, \"\\n\")\n```\n\n:::\n\n---\n\n## Additional Challenges\n\n::: {.callout-warning}\n## Advanced Questions\n\n1. **Correlation analysis**: Calculate the correlation between in-degree and out-degree. Are they correlated? What does this mean?\n\n2. **Degree centrality vs other measures**: Compute betweenness centrality for the top 20 nodes by in-degree. Are high-degree nodes also high in betweenness?\n\n3. **Subgraph analysis**: Extract the subgraph containing only nodes with in-degree > 50. What is the density of this subgraph?\n\n4. **Temporal analysis**: The dataset includes a timestamp. How has the degree distribution evolved over time?\n\n5. **Network resilience**: What would happen to the network's connectivity if you removed the top 1% of nodes by in-degree? (Hint: compute the size of the largest connected component before and after removal)\n\n:::\n\n---\n\n## Submission Guidelines\n\nYour submission should include:\n\n1. **R script or Quarto document** with all code and outputs\n2. **Visualizations** of degree distributions (linear and log-log scales)\n3. **Written answers** to all reflection questions (200-400 words total)\n4. **Interpretation** of what the degree distribution reveals about Wikipedia's voting network\n\n**File naming**: `week2_perform1_[YourName].qmd` or `.R`\n\n**Due date**: Check the course schedule\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}