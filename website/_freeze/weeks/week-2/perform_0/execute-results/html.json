{
  "hash": "e763012b4fae1ba0b92749d27fa1ca1a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Practice Exercise: Computing Centrality Measures\"\nsubtitle: \"Week 2 - Network Analytics\"\n---\n\n## Exercise Overview\n\n**Task:** Calculate centrality measures for a collaboration network and interpret the results.\n\n**Network Description:**\n\n- 15-node collaboration network\n- Undirected edges (mutual relationships)\n- Nodes represent team members\n- Edges represent working relationships\n\n## Questions\n\n1. Which node has the highest **degree centrality**?\n2. Which node has the highest **betweenness centrality**?\n3. Which node has the highest **closeness centrality**?\n4. Which nodes have the highest **clustering coefficient**?\n5. How do these metrics correlate with each other?\n\n---\n\n## Network Initialization and Visualization\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(igraph)\nlibrary(ggraph)\n\n# Create a larger exercise network (15 nodes)\nset.seed(999)\nedges_exercise <- data.frame(\n  from = c(1, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 13, 13, 14),\n  to = c(2, 3, 4, 3, 5, 4, 5, 5, 6, 6, 7, 8, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 15, 15)\n)\n\ng_exercise <- graph_from_data_frame(edges_exercise, directed = FALSE)\n\n# Plot the network\nggraph(g_exercise, layout = 'fr') +\n  geom_edge_link(color = \"#D3D3D3\", width = 1.5, alpha = 0.6) +\n  geom_node_point(color = \"#c41c85\", size = 12) +\n  geom_node_text(aes(label = name), color = \"white\", size = 4) +\n  scale_x_continuous(expand = expansion(mult = 0.2)) +\n  scale_y_continuous(expand = expansion(mult = 0.2)) +\n  theme_void() +\n  theme(\n    plot.background = element_rect(fill = \"white\", color = NA)\n  )\n```\n\n::: {.cell-output-display}\n![](perform_0_files/figure-html/unnamed-chunk-1-1.png){fig-align='center' width=768}\n:::\n:::\n\n",
    "supporting": [
      "perform_0_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}