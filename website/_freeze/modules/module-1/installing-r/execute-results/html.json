{
  "hash": "e9fbbadfa57092331ceda8200c4f0069",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Installing R and RStudio\"\n---\n\n## Introduction\n\nR is a powerful programming language and free software environment for statistical computing and graphics. In this guide, we'll walk you through installing R and RStudio, which together provide everything you need to start your journey in data analysis and statistical computing.\n\n## Why R and RStudio?\n\nBefore diving into installation, let's understand what we're installing:\n\n**R** is the core programming language that provides:\n\n- Comprehensive statistical and graphical capabilities\n- Extensive package ecosystem (CRAN)\n- Active community and continuous development\n- Free and open-source\n\n**RStudio** is an Integrated Development Environment (IDE) that makes working with R much easier by providing:\n\n- Syntax highlighting and code completion\n- Integrated help and documentation\n- Project management tools\n- Built-in plotting and data viewing\n- Package management interface\n\nThink of R as the engine and RStudio as the comfortable cockpit that makes driving the engine a pleasant experience.\n\n## Installation Steps\n\n### Step 1: Install R\n\nR must be installed first, as RStudio depends on it.\n\n#### For Windows:\n\n1. Go to the [CRAN website](https://cran.r-project.org/)\n2. Click \"Download R for Windows\"\n3. Click \"base\" (for first-time users)\n4. Download the latest version (currently R 4.4.x)\n5. Run the downloaded installer and follow the prompts\n6. Use default settings unless you have specific preferences\n\n#### For macOS:\n\n1. Go to the [CRAN website](https://cran.r-project.org/)\n2. Click \"Download R for macOS\"\n3. Download the appropriate installer:\n   - For Apple Silicon Macs (M1/M2): R-4.4.x-arm64.pkg\n   - For Intel Macs: R-4.4.x-x86_64.pkg\n4. Open the downloaded .pkg file and follow the installation steps\n\n#### For Linux:\n\nMost Linux distributions include R in their package repositories. For Ubuntu/Debian:\n\n```bash\nsudo apt update\nsudo apt install r-base r-base-dev\n```\n\nFor more detailed Linux instructions, visit the [CRAN Linux page](https://cran.r-project.org/bin/linux/).\n\n### Step 2: Install RStudio Desktop\n\nAfter installing R successfully:\n\n1. Go to the [RStudio download page](https://posit.co/download/rstudio-desktop/)\n2. Scroll down to \"All Installers and Tarballs\"\n3. Choose the appropriate installer for your operating system:\n   - Windows: `.exe` installer\n   - macOS: `.dmg` installer\n   - Linux: `.deb` or `.rpm` package\n4. Download and run the installer\n5. Follow the installation prompts\n\n## Verifying Your Installation\n\nLet's make sure everything is working correctly:\n\n### Test R Installation\n\n1. Open RStudio (it should automatically find your R installation)\n2. In the Console pane (usually bottom-left), you should see something like:\n\n```bash\nR version 4.4.1 (2024-06-14) -- \"Race for Your Life\"\nCopyright (C) 2024 The R Foundation for Statistical Computing\nPlatform: x86_64-pc-linux-gnu (64-bit)\n...\nType 'q()' to quit R.\n\n>\n```\n\n3. Try a simple command:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Test basic arithmetic\n2 + 2\n\n# Check R version\nR.version.string\n\n# Get help\nhelp(mean)\n```\n:::\n\n\nIf these work without errors, congratulations! Your R installation is successful.\n\n## Essential Configuration\n\n### Setting Your Working Directory\n\nIt's helpful to organize your R work in a dedicated folder:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check current working directory\ngetwd()\n\n# Set working directory (adjust path as needed)\nsetwd(\"~/Documents/R-Projects\")\n\n# Or better yet, use RStudio Projects (covered in next module)\n```\n:::\n\n\n### Installing Essential Packages\n\nR's power comes from its packages. Let's install some essential ones:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Install the tidyverse (collection of data science packages)\ninstall.packages(\"tidyverse\")\n\n# Install other useful packages\ninstall.packages(c(\"here\", \"rmarkdown\", \"devtools\"))\n\n# Load a package to test\nlibrary(tidyverse)\n```\n:::\n\n\n## Package Management Fundamentals\n\nUnderstanding package management is crucial for R success:\n\n### CRAN Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Install from CRAN (most common)\ninstall.packages(\"package_name\")\n\n# Install multiple packages\ninstall.packages(c(\"dplyr\", \"ggplot2\", \"readr\"))\n\n# Update packages\nupdate.packages()\n\n# Remove packages\nremove.packages(\"package_name\")\n```\n:::\n\n\n### Loading Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load package for current session\nlibrary(dplyr)\n\n# Alternative loading method\nrequire(dplyr)\n\n# Check installed packages\ninstalled.packages()\n\n# Check loaded packages\nsearch()\n```\n:::\n\n\n## RStudio Layout Overview\n\nWhen you first open RStudio, you'll see four panes:\n\n1. **Console** (bottom-left): Where R commands are executed\n2. **Source** (top-left): Text editor for scripts and documents\n3. **Environment/History** (top-right): Variables and command history\n4. **Files/Plots/Packages/Help** (bottom-right): File browser, plots, package manager, and help\n\nDon't worry if this seems overwhelming â€“ we'll explore each pane in detail in the next lesson!\n\n## Common Installation Issues\n\n### \"R not found\" Error in RStudio\n\n- **Solution**: Reinstall R first, then RStudio\n- RStudio needs to detect your R installation\n\n### Package Installation Fails\n\n- **Windows**: Install Rtools from [CRAN](https://cran.r-project.org/bin/windows/Rtools/)\n- **macOS**: Install Xcode command line tools: `xcode-select --install`\n- **All platforms**: Try installing packages from a different mirror\n\n### Permission Issues\n\n- **Solution**: Run RStudio as administrator (Windows) or use `sudo` (Linux/macOS) for package installation\n\n## Alternative Installation Methods\n\n### Using Package Managers\n\n#### Windows - Chocolatey:\n```bash\nchoco install r.project rstudio\n```\n\n#### macOS - Homebrew:\n```bash\nbrew install --cask r rstudio\n```\n\n#### Linux - Conda:\n```bash\nconda install -c r r-base rstudio\n```\n\n## Next Steps\n\nNow that you have R and RStudio installed:\n\n1. Explore the [RStudio Interface](rstudio-interface.qmd)\n2. Try [R as a Calculator](r-as-calculator.qmd)\n3. Learn about [R Scripts and Projects](r-scripts-projects.qmd)\n\n## Resources for Further Learning\n\n- [RStudio Education](https://education.rstudio.com/)\n- [R for Data Science book](https://r4ds.had.co.nz/) (free online)\n- [CRAN Task Views](https://cran.r-project.org/web/views/)\n- [RStudio Cheat Sheets](https://rstudio.com/resources/cheatsheets/)\n\n::: {.callout-tip}\n## Pro Tip\n\nCreate a dedicated folder for your R projects and always use RStudio Projects to manage your work. This keeps your files organized and makes your analysis reproducible!\n:::\n\n## Congratulations!\n\nYou've successfully set up your R environment! You're now ready to start your data science journey with R.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}