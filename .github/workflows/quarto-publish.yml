name: Render and Publish

on:
  push:
    branches: master
    
  workflow_dispatch:

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        
      - name: Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2

      - name: Install R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.3.0'
          use-public-rspm: true

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev libxml2-dev libssl-dev libfontconfig1-dev libharfbuzz-dev libfribidi-dev libfreetype6-dev libpng-dev libtiff5-dev libjpeg-dev python3-dev

      - name: Setup R package cache
        uses: actions/cache@v3
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ hashFiles('**/renv.lock') }}
          restore-keys: |
            ${{ runner.os }}-r-

      - name: Install R dependencies
        run: |
          install.packages(c('tidyverse', 'knitr', 'rmarkdown', 'dplyr', 'tidyr', 'ggplot2', 'igraph', 'tidygraph', 'ggraph', 'gridExtra', 'readr', 'scales', 'tibble', 'viridis', 'RColorBrewer'), repos='https://cloud.r-project.org/')
        shell: Rscript {0}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install numpy scipy matplotlib pandas networkx plotly seaborn jupyter ipykernel

      - name: Install Python kernel for Jupyter
        run: |
          python -m ipykernel install --user --name python3 --display-name "Python 3"
          jupyter kernelspec list

      - name: Verify Python setup for Quarto
        run: |
          python --version
          python -c "import networkx; print(f'NetworkX version: {networkx.__version__}')"
          python -c "import matplotlib; print(f'Matplotlib version: {matplotlib.__version__}')"
          jupyter --version
          quarto check jupyter
          echo "Testing Python kernel with Quarto..."
          echo -e '---\ntitle: Test\njupyter: python3\n---\n\n```{python}\n#| eval: false\nprint("Hello")\n```' > test.qmd
          quarto render test.qmd --to html
          rm test.qmd test.html

      - name: Install TinyTeX for PDF rendering (syllabus only)
        run: quarto install tinytex --update-path

      - name: Render Quarto Project
        run: |
          cd website
          quarto render --to html
        timeout-minutes: 15

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: website/_site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4